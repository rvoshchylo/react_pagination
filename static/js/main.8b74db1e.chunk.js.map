{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","visibleItems","pageCounter","startOfCount","endOfCount","endOfPagesCount","Math","ceil","i","push","className","cn","disabled","href","onClick","map","number","active","item","items","from","to","numbers","n","getNumbers","App","useState","selector","setSelector","page","setPage","startItem","endItem","length","id","value","onChange","event","currentTarget","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"oNASaA,EAAiC,SAAC,GAKxC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAyB,GACzBC,EAAwB,GAExBC,EAAgBJ,EAAcD,EAAWA,EAAU,EACrDM,EAAaL,EAAcD,EACzBO,EAAkBC,KAAKC,KAAKV,EAAQC,GAEtCM,EAAaP,IACfO,EAAaP,GAGf,IAAK,IAAIW,EAAIL,EAAcK,GAAKJ,EAAYI,GAAK,EAC/CP,EAAaQ,KAAKD,GAGpB,IAAK,IAAIA,EAAI,EAAGA,GAAKH,EAAiBG,GAAK,EACzCN,EAAYO,KAAKD,GAGnB,OACE,qCACE,qBAAIE,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAChB,CAAEC,SAA0B,IAAhBb,IADd,SAGE,mBACE,UAAQ,WACRW,UAAU,YACVG,KAAK,QACL,gBACkB,IAAhBd,EACE,OAEA,QAGJe,QAAS,WACa,IAAhBf,GACFC,EAAcD,EAAc,IAblC,oBAoBDG,EAAYa,KAAI,SAACC,GAAD,OACf,oBACEN,UAAWC,IAAG,YACZ,CAAEM,OAAQlB,IAAgBiB,IAF9B,SAKE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAK,KACLC,QAAS,WACHf,IAAgBiB,GAClBhB,EAAagB,IANnB,SAUGA,KAZEA,MAgBT,oBAAIN,UAAWC,IAAG,YAChB,CAAEC,SAAUb,IAAgBM,IAD9B,SAGE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBACEd,IAAgBM,EACd,OAEA,QAGJS,QAAS,WACHf,IAAgBM,GAClBL,EAAaD,EAAc,IAbjC,uBAsBJ,6BACGE,EAAac,KAAI,SAACG,GAAD,OAChB,oBAAI,UAAQ,OAAZ,wBACWA,IADaA,YCrG5BC,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQb,KAAKc,GAGf,OAAOD,EDDeE,CAAW,EAAG,IACnCT,KAAI,SAAAQ,GAAC,qBAAYA,MAEPE,EAAgB,WAC3B,MAAgCC,mBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAwBF,mBAAS,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACMC,EAAaF,EAAOF,EAAYA,EAAW,EAC7CK,EAAUH,EAAOF,EAOrB,OAJIK,EAAUb,EAAMc,SAClBD,EAAUb,EAAMc,QAIhB,sBAAKvB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWmB,EADX,mBAC0BE,EAD1B,cACyCC,EADzC,aAIA,sBAAKtB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRwB,GAAG,kBACHxB,UAAU,eACVyB,MAAOR,EACPS,SAAU,SAACC,GACTT,GAAaS,EAAMC,cAAcH,OACjCL,EAAQ,IAPZ,SAhBe,CAAC,EAAG,EAAG,GAAI,IA0BRf,KAAI,SAAAG,GAAI,OACtB,wBAAQiB,MAAOjB,EAAf,SAAsBA,WAK5B,uBAAOqB,QAAQ,kBAAkB7B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEb,MAAOsB,EAAMc,OACbnC,QAAS6B,EACT5B,YAAa8B,EACb7B,aAAc8B,QEpDtBU,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.8b74db1e.chunk.js","sourcesContent":["import cn from 'classnames';\n\ntype Selected = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (value: number) => void;\n};\n\nexport const Pagination: React.FC<Selected> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const visibleItems: number[] = [];\n  const pageCounter: number[] = [];\n\n  const startOfCount = (currentPage * perPage) - perPage + 1;\n  let endOfCount = currentPage * perPage;\n  const endOfPagesCount = Math.ceil(total / perPage);\n\n  if (endOfCount > total) {\n    endOfCount = total;\n  }\n\n  for (let i = startOfCount; i <= endOfCount; i += 1) {\n    visibleItems.push(i);\n  }\n\n  for (let i = 1; i <= endOfPagesCount; i += 1) {\n    pageCounter.push(i);\n  }\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn('page-item',\n          { disabled: currentPage === 1 })}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={\n              currentPage === 1 ? (\n                'true'\n              ) : (\n                'false'\n              )\n            }\n            onClick={() => {\n              if (currentPage !== 1) {\n                onPageChange((currentPage - 1));\n              }\n            }}\n          >\n            «\n          </a>\n        </li>\n        {pageCounter.map((number) => (\n          <li\n            className={cn('page-item',\n              { active: currentPage === number })}\n            key={number}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href=\"#1\"\n              onClick={() => {\n                if (currentPage !== number) {\n                  onPageChange(number);\n                }\n              }}\n            >\n              {number}\n            </a>\n          </li>\n        ))}\n        <li className={cn('page-item',\n          { disabled: currentPage === endOfPagesCount })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={\n              currentPage === endOfPagesCount ? (\n                'true'\n              ) : (\n                'false'\n              )\n            }\n            onClick={() => {\n              if (currentPage !== endOfPagesCount) {\n                onPageChange(currentPage + 1);\n              }\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n\n      <ul>\n        {visibleItems.map((item) => (\n          <li data-cy=\"item\" key={item}>\n            {`Item ${item}`}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items: string[] = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [selector, setSelector] = useState(5);\n  const [page, setPage] = useState(1);\n  const startItem = (page * selector) - selector + 1;\n  let endItem = page * selector;\n  const ITEMS_PER_PAGE = [3, 5, 10, 20];\n\n  if (endItem > items.length) {\n    endItem = items.length;\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items ${startItem} - ${endItem} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={selector}\n            onChange={(event) => {\n              setSelector(+event.currentTarget.value);\n              setPage(1);\n            }}\n          >\n            {ITEMS_PER_PAGE.map(item => (\n              <option value={item}>{item}</option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={selector}\n        currentPage={page}\n        onPageChange={setPage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}